<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Seng Kin Chu - Portfolio</title><link href="/" rel="alternate"></link><link href="/feeds/portfolio.atom.xml" rel="self"></link><id>/</id><updated>2018-07-08T00:00:00-07:00</updated><entry><title>GPU Analytics</title><link href="/gpu-analytics.html" rel="alternate"></link><published>2018-07-08T00:00:00-07:00</published><updated>2018-07-08T00:00:00-07:00</updated><author><name>Seng Chu</name></author><id>tag:None,2018-07-08:/gpu-analytics.html</id><summary type="html">&lt;p&gt;&lt;center&gt;Data analytics dashboard for various GPUs created with Python and Dash.&lt;/center&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;center&gt;
To use the most updated version of the application: https://gpuanalytics.codingdisciple.com/ &lt;/p&gt;
&lt;p&gt;To use the static version of the application hosted on Heroku, click &lt;a href="http://gpuanalytics.herokuapp.com/"&gt;here&lt;/a&gt;. (Might take some time to load)&lt;/p&gt;
&lt;p&gt;For the GitHub repository of this project, click &lt;a href="https://github.com/sengkchu/gpu-analytics"&gt;here&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;center&gt;&lt;h3&gt;Summary&lt;/h3&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;The purpose of this project is create a web application that allows users to easily compare prices and specifications of popular GPUs. 
There are many websites that tries to accomplish this task. However, the majority of these websites are overloaded with ads and links to their affliates. 
Or they overwhelm you with information you don't really care about.
I wanted to create something that can condenses the data down into a simple interface.
I also wanted to provide something that most websites lack, and that is the price history.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img src="/images/gpu-analytics/cover.png" alt="cover"/&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;center&gt;&lt;h3&gt;Motivation&lt;/h3&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;As a hardcore gamer/PC builder myself, I want to answer the following questions:&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;center&gt;"Should we wait for the next NVIDIA GPU release?"&lt;/center&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;This question is harder to answer because no one really knows when the next series of GPU is coming out.
However, we can look at the price-performance history and try to look for trends there.
For example, the price of a GTX 1080 TI is actually more expensive today (7/1/2018) than it was when it first came out (3/11/2017). &lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img src="/images/gpu-analytics/prices.png" alt="schema"/&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Is it reasonable to pay more? That is really up to you to decide.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;center&gt;&lt;h3&gt;Web scraping and the Back-End&lt;/h3&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;The back-end for this project is a SQLite database currently stored in &lt;a href="https://m.do.co/c/9ef8fb149c50"&gt;Digital Ocean&lt;/a&gt;, a cloud VPS provider. 
It is currently being served using Apache and mod_wsgi through Cloudflare.
I wrote a Python script to scrape data from PCPartPicker and PassMark using BeautifulSoup. This script runs itself daily at 00:10 Pacific time.
The database was designed to be as small as possible (~5 MB) so it is lightweight and fits even into a GitHub repo.&lt;/p&gt;
&lt;p&gt;The following is the database schema:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img src="/images/gpu-analytics/db_schema.png" alt="schema"/&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;</content></entry><entry><title>MAL Reviews Scraper</title><link href="/mal-reviews-scraper.html" rel="alternate"></link><published>2018-04-29T00:00:00-07:00</published><updated>2018-04-29T00:00:00-07:00</updated><author><name>Seng Chu</name></author><id>tag:None,2018-04-29:/mal-reviews-scraper.html</id><summary type="html">&lt;p&gt;&lt;center&gt;Python scripts and IPython notebooks for scraping anime reviews from &lt;a href="https://myanimelist.net/"&gt;MyAnimeList&lt;/a&gt; into a SQL database.&lt;/center&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;center&gt;&lt;/p&gt;
&lt;p&gt;For the full writeup of this project, click &lt;a href="https://codingdisciple.com/MAL-web-scraper.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you prefer the GitHub version of the writeup, click &lt;a href="https://github.com/sengkchu/MAL-reviews-scraper/blob/master/Methodology%20and%20data%20analysis/MAL-Scraper%20Methodology%20and%20Data%20Analysis.ipynb"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the GitHub repository of this project, click &lt;a href="https://github.com/sengkchu/MAL-reviews-scraper"&gt;here&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;center&gt;&lt;h3&gt;Summary&lt;/h3&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Data is all around us, but getting that data and processing it into a readable format is usually the most time consuming part of any data pipeline.
In this project, I focused on web scraping using BeautifulSoup. The flowchart below is the process that can be used for most websites and turn the internet itself into a valuable data source.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img src="/images/mal-reviews-scraper/summary.png" alt="summary"/&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;center&gt;&lt;h3&gt;Database Schema&lt;/h3&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img src="/images/mal-reviews-scraper/cover.png" alt="database schema"/&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;center&gt;&lt;h3&gt;Sample Visualization&lt;/h3&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img src="/images/mal-reviews-scraper/samplevis.png" alt="sample visualization"/&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;</content></entry><entry><title>Investigating the Gender Wage Gap</title><link href="/sf-gender-gap.html" rel="alternate"></link><published>2018-03-18T23:00:00-07:00</published><updated>2018-03-18T23:00:00-07:00</updated><author><name>Seng Chu</name></author><id>tag:None,2018-03-18:/sf-gender-gap.html</id><summary type="html">&lt;p&gt;&lt;center&gt;A data exploration and analysis web application.&lt;/center&gt;&lt;center&gt; And a detailed analysis on the gender wage gap for public jobs in California using Python.&lt;/center&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;center&gt;
To use the application hosted on Heroku, click &lt;a href="https://gendergapvisualization.herokuapp.com/"&gt;here&lt;/a&gt;. (Might take some time to load)&lt;/p&gt;
&lt;p&gt;For the full writeup of this project, click &lt;a href="https://codingdisciple.com/sf-gender-gap.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you prefer the full notebook instead, click &lt;a href="https://github.com/sengkchu/gendergapvisualization/blob/master/data%20processing%20and%20analysis/Investigating%20the%20Gender%20Wage%20Gap.ipynb"&gt;here&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;center&gt;&lt;h3&gt;Introduction&lt;/h3&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;In this project, I focused on data analysis and visualization of the gender wage gap. 
Specifically, the public jobs in the city of San Francisco and Newport Beach were analyzed. 
The complete list of requirements and files used can be found my GitHub repository &lt;a href="https://github.com/sengkchu/gendergapvisualization"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note: I am not affiliated with any political group, everything I write in this project is based on my perspective of the data alone.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;h3&gt;Key Findings&lt;/h3&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;1) There is no gender wage gap for part time employees for both San Francisco and Newport Beach. 
The curves were nearly identical for both males and females for both kernel density plots.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img src="/images/sf-gender-gap/part-timers.png" alt="part-timers"/&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2) There is an overall gender wage gap for full time employees for both San Francisco and Newport Beach.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
&lt;img src="/images/sf-gender-gap/full-timers.png" alt="full-timers"/&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;3) When broken down by job categories, the gender wage gap is no more than 10% in San Francisco, and not all of these percentage values showed favoritism towards males. 
&lt;center&gt;
&lt;img src="/images/sf-gender-gap/cover2.png" alt="cover"/&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;4) There is a higher representation of males in Newport Beach compared to San Francisco for public jobs.
&lt;center&gt;&lt;br&gt;
&lt;img src="/images/sf-gender-gap/total-percentage.png" alt="total-percentage"/&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;5) Gender representation by job category. &lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;br&gt;
&lt;img src="/images/sf-gender-gap/representation.png" alt="representation"/&gt;
&lt;/center&gt;&lt;/p&gt;
&lt;hr&gt;</content></entry><entry><title>codingdisciple.com</title><link href="/https://codingdisciple.com/category/learning-data-science" rel="alternate"></link><published>2018-02-16T23:00:00-08:00</published><updated>2018-02-16T23:00:00-08:00</updated><author><name>Seng Chu</name></author><id>tag:None,2018-02-16:/https://codingdisciple.com/category/learning-data-science</id><summary type="html">&lt;p&gt;&lt;center&gt;An educational website designed to provide resources on data science.&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Content includes but not limited to:
&lt;ul&gt;
&lt;li&gt;    7-part series on statistics and hypothesis testing in Python.&lt;/li&gt;
&lt;li&gt;    Demonstrations on the data analysis process, from extracting data using SQL to answering business questions.&lt;/li&gt;
&lt;li&gt;    Guides on the machine learning process.&lt;/li&gt;
&lt;li&gt;    Solutions to 17 guided …&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;center&gt;An educational website designed to provide resources on data science.&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Content includes but not limited to:
&lt;ul&gt;
&lt;li&gt;    7-part series on statistics and hypothesis testing in Python.&lt;/li&gt;
&lt;li&gt;    Demonstrations on the data analysis process, from extracting data using SQL to answering business questions.&lt;/li&gt;
&lt;li&gt;    Guides on the machine learning process.&lt;/li&gt;
&lt;li&gt;    Solutions to 17 guided projects from Dataquest.io demonstrating the usage of tools such as pandas, numpy, matplotlib, scikit-learn, SQL and spark. &lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;</content></entry></feed>